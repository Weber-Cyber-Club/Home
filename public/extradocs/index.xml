<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extradocs on </title>
    <link>//localhost:1313/extradocs/</link>
    <description>Recent content in Extradocs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="//localhost:1313/extradocs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ProfCom Protocol Specification</title>
      <link>//localhost:1313/extradocs/profcom/profcom-protocol-specification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/extradocs/profcom/profcom-protocol-specification/</guid>
      <description>&lt;h2 id=&#34;purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;p&gt;The purpose of this specification is to assist in the analysis of the Profos-Systems Communication Suite.&lt;/p&gt;
&lt;h2 id=&#34;data-types&#34;&gt;Data Types&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Data will be in Little-Endian&lt;/li&gt;
&lt;li&gt;Integer = 4 bytes&lt;/li&gt;
&lt;li&gt;Boolean = 1 byte&lt;/li&gt;
&lt;li&gt;Strings (Char) Length will be defined by the integer value before the string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-profcom&#34;&gt;What is ProfCom?&lt;/h2&gt;
&lt;p&gt;ProfCom is a communication protocol used to relay important messages back to a central command. According to our intel ProfCom Servers operate over TCP on port 8080 to try and mask the identity of the application. As a method of &amp;ldquo;security&amp;rdquo; ProfCom uses an XOR operation to obfuscate the data sent by the application. After some reverse engineering of the ProfCom client application we have found the XOR key is 0x45. The flow of the client server interaction is given below:&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;p&gt;The purpose of this specification is to assist in the analysis of the Profos-Systems Communication Suite.&lt;/p&gt;
&lt;h2 id=&#34;data-types&#34;&gt;Data Types&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Data will be in Little-Endian&lt;/li&gt;
&lt;li&gt;Integer = 4 bytes&lt;/li&gt;
&lt;li&gt;Boolean = 1 byte&lt;/li&gt;
&lt;li&gt;Strings (Char) Length will be defined by the integer value before the string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-profcom&#34;&gt;What is ProfCom?&lt;/h2&gt;
&lt;p&gt;ProfCom is a communication protocol used to relay important messages back to a central command. According to our intel ProfCom Servers operate over TCP on port 8080 to try and mask the identity of the application. As a method of &amp;ldquo;security&amp;rdquo; ProfCom uses an XOR operation to obfuscate the data sent by the application. After some reverse engineering of the ProfCom client application we have found the XOR key is 0x45. The flow of the client server interaction is given below:&lt;/p&gt;
&lt;h3 id=&#34;profcom-client-server-interaction&#34;&gt;ProfCom Client Server Interaction&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Login Process:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
Client -&amp;gt; Server

    Integer Length of Username
    Char Username
    Integer Length of Password
    Char Password

Server -&amp;gt; Client

    Boolean Password Accept/Rejected
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;If authentication fails, the login process is reinitiated by the client.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data Transfer:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
Client -&amp;gt; Server

        Integer Number of Messages to Send

Client -&amp;gt; Server

    Integer Length of Message
    Char Data
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;After all messages are sent the client and server will disconnect.&lt;/strong&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Profos-Systems Communications Lab Answers</title>
      <link>//localhost:1313/extradocs/profcom/profcom-answer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/extradocs/profcom/profcom-answer/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Question 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;How many ProfCom Packets were sent in this packet capture? 78
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 2:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What are the usernames of the users who successfully log in? ProfessorX &amp;amp; AllAmericanGirl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 3:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What password is used to successfully authenticate the 2nd user? Vein.fm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 4:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What IP address did the 1st user successfully authenticate from? 34.0.0.11
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 5:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What is the IP address of the server? 10.0.10.2 (Reverse Engineering would give you 65.0.0.2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 6:&lt;/strong&gt;&lt;/p&gt;</description>
      <content>&lt;p&gt;&lt;strong&gt;Question 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;How many ProfCom Packets were sent in this packet capture? 78
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 2:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What are the usernames of the users who successfully log in? ProfessorX &amp;amp; AllAmericanGirl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 3:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What password is used to successfully authenticate the 2nd user? Vein.fm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 4:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What IP address did the 1st user successfully authenticate from? 34.0.0.11
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 5:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What is the IP address of the server? 10.0.10.2 (Reverse Engineering would give you 65.0.0.2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 6:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;How many messages were sent by the 2nd user that successfully authenticated? 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 7:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What is the flag that was transferred by the protocol? WSU-WALL-0808
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Question 8:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Where was this capture completed based on the diagram? This packet capture is taken from within the ProfCom
Hosting Site, specifically on the ProfCom server itself. Although, I am really just looking for the “ProfCom
Hosting Site.” This can be found by looking at the IP addresses coming from the clients vs the IP address of
the server. If we look at the TTL of the packets when they are being captured we would also see the clients TTL
is set to 61, meaning there must have been three layer 3 hops before the packet reached the server. This would
match the diagram assuming the switch between the host and the router is a multi-layer switch, which in this
case, it is. In this lab scenario you are also better off capturing on the server side. This is because it is
the only way to ensure we can capture all of the data from all of our clients.
&lt;/code&gt;&lt;/pre&gt;
</content>
    </item>
    
  </channel>
</rss>
